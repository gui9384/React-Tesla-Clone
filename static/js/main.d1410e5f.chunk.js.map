{"version":3,"sources":["features/car/carSlice.js","Components/Header.js","Components/Section.js","Components/Home.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","value","status","increment","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1410e5f.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    cars: [\"Model S\", \"Model 3\", \"Model X\", \"Model Y\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reducers:{}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer;","import React,{useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {selectCars} from '../features/car/carSlice';\r\nimport {useSelector} from 'react-redux';\r\nimport { cardClasses } from '@mui/material';\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setBurgerStatus] = useState(false);\r\n    const cars = useSelector(selectCars);\r\n    return (\r\n       \r\n        <Container>\r\n           <a>\r\n               <img src=\"/images/logo.svg\" alt=\"\" />\r\n           </a>\r\n           <Menu>\r\n           {cars && cars.map((car, index) => (\r\n            <a key={index} href=\"#\">{car}</a>\r\n           ))}\r\n          \r\n           </Menu>\r\n           <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n                <a href=\"#\">Tesla account</a>\r\n               <CustomMenu onClick={()=> setBurgerStatus(true)}/>\r\n           </RightMenu>\r\n           <BurgerNav show = {burgerStatus}>\r\n           <CloseWrapper> \r\n                <CustomClose  onClick={()=> setBurgerStatus(false)}/> \r\n           </CloseWrapper>\r\n           {cars && cars.map((car, index) => (\r\n            <li key={index}><a href=\"#\">{car}</a></li>\r\n           ))}\r\n               <li><a href=\"#\">Existing inventory</a></li>\r\n               <li><a href=\"#\">Used inventory</a></li>\r\n               <li><a href=\"#\">Trade-in</a></li>\r\n               <li><a href=\"#\">Cybertruck</a></li>\r\n               <li><a href=\"#\">Roadster</a></li>\r\n           </BurgerNav>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nz-index:1;\r\nmin-height:60px;\r\nposition:fixed;\r\ndisplay :flex;\r\nalign-item:center;\r\njustify-content:space-between;\r\npadding: 0 20px;\r\n`\r\nconst Menu = styled.div`\r\ndisplay :flex;\r\nalign-items:center;\r\njustify-content:center;\r\nflex:1;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    padding: 0 10px;\r\n    flex-wrap: nowrap;\r\n}\r\n@media(max-width:768px){\r\n    display:none;\r\n}\r\n`\r\nconst RightMenu = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\n\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    margin-right:10px;\r\n    flex-wrap: nowrap;\r\n}\r\n`\r\nconst CustomMenu = styled(MenuIcon)`\r\ncursor:pointer;\r\n\r\n`\r\nconst BurgerNav = styled.div`\r\nposition:fixed;\r\ntop: 0;\r\nbottom:0;\r\nright:0;\r\nbackground-color:white;\r\nwidth:300px;\r\nz-index:16;\r\nlist-style:none;\r\npadding:20px;\r\ndisplay:flex;\r\nflex-direction:column;\r\ntext-align:start;\r\ntransform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\ntransition: transform  0.3s ;\r\n\r\nli{\r\n    padding:15px 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n}\r\na{\r\n    font-weight:600;\r\n}\r\n`\r\nconst CustomClose = styled(CloseIcon)`\r\ncursor:pointer;\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\ndisplay: flex;\r\njustify-content:flex-end;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction Section({title, description, backgroundImg, leftBtnText, rightBtnText}) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                <h1>{title}</h1>\r\n                <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                    <LeftButton>\r\n                    {leftBtnText}\r\n                    </LeftButton>\r\n                \r\n                    {rightBtnText &&\r\n                        <RightButton>\r\n                        {rightBtnText}\r\n                        </RightButton>\r\n                    }\r\n                    \r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src=\"/images/down-arrow.svg\" />\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n\r\nwidth:100vw;\r\nheight: 100vh;\r\nbackground-size:cover;\r\nbackground-position:center;\r\nbackground-repeat: no-repeat;\r\nbackground-image: ${props => `url(\"/images/${props.bgImage}\")`};\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: space-between; // vertical\r\nalign-items:center; //horizontal\r\n\r\n`\r\n\r\nconst ItemText = styled.div`\r\npadding-top:15vh;\r\ntext-align:center;\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\ndisplay:flex;\r\nmargin-bottom: 30px;\r\n@media(max-width:768px){\r\n    flex-direction:column;\r\n}\r\n\r\n`\r\nconst LeftButton = styled.div`\r\nbackground-color: rgba(23, 26, 32, 0.8);\r\nheight:40px;\r\nwidth: 256px;\r\ncolor:white;\r\ndisplay: flex;\r\njustify-content:center;\r\nalign-items:center;\r\nborder-radius:100px;\r\nopacity:0.85;\r\ntext-transform:uppercase;\r\nfont-size: 12px;\r\ncursor:pointer;\r\nmargin:8px;\r\n`\r\nconst RightButton = styled(LeftButton)`\r\nbackground-color:white;\r\nopacity 0.65;\r\ncolor:black;\r\n\r\n`\r\nconst DownArrow = styled.img`\r\nmargin-top:20px;\r\nheight:40px;\r\noverflow-x:hidden;\r\nanimation: animateDown infinite 1.5s;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n         \r\n            <Section \r\n                title=\"Model S\"\r\n                description= \"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-s.jpg\"\r\n                leftBtnText = \"Custom order\"\r\n                rightBtnText = \"Existing inventory\"\r\n            />\r\n            <Section \r\n                title=\"Model Y\"\r\n                description= \"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-y.jpg\"\r\n                leftBtnText = \"Custom order\"\r\n                rightBtnText = \"Existing inventory\"\r\n            />\r\n            <Section \r\n                 title=\"Model 3\"\r\n                description= \"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-3.jpg\"\r\n                leftBtnText = \"Custom order\"\r\n                rightBtnText = \"Existing inventory\"\r\n            />\r\n            <Section \r\n                 title=\"Model X\"\r\n                description= \"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-x.jpg\"\r\n                leftBtnText = \"Custom order\"\r\n                rightBtnText = \"Existing inventory\"\r\n            />\r\n             <Section \r\n                 title=\"Lowest Cost Solar Panels in America\"\r\n                description= \"Money-back guarentee\"\r\n                backgroundImg=\"solar-panel.jpg\"\r\n                leftBtnText = \"Order now\"\r\n                rightBtnText = \"Learn more\"\r\n            />\r\n             <Section \r\n                 title=\"Solar for New Roofs\"\r\n                description= \"Solar Roof Cost Less Than a New Roof Plus Solar Panels\"\r\n                backgroundImg=\"solar-roof.jpg\"\r\n                leftBtnText = \"Order now\"\r\n                rightBtnText = \"Learn more\"\r\n            />\r\n             <Section \r\n                 title=\"Accessories\"\r\n                description= \"\"\r\n                backgroundImg=\"accessories.jpg\"\r\n                leftBtnText = \"Shop now\"\r\n                rightBtnText = \"\"\r\n            />\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nconst Container = styled.div`\r\nheight: 100vh;\r\n\r\n`\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Header  from './Components/Header';\nimport Home from './Components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport carReducer from '../features/car/carSlice';\n\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}